{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Routes/Home.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","history","useHistory","useForm","register","handleSubmit","variants","animate","initial","to","whileHover","xmlns","width","height","viewBox","path","d","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getMovies","fetch","then","response","json","getLastMovies","getTopRatedMovies","getUpcomingMovies","getTvShows","getLastTvShows","getAiringTodayTvShows","getPopularShows","getTopRatedTvShows","searchMovies","a","searchTvShows","makeImagePath","id","format","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","p","Slider","SliderTitle","Clear","Row","Box","Info","black","Overlay","BigMovie","BigCover","AdultMark","BigTitle","h3","BigOverview","rowVariants","hidden","window","outerWidth","visible","exit","boxVariants","scale","hover","y","delay","duration","infoVariants","opacity","Home","bigMovieMatch","useQuery","isLoading","lastData","isLastLoading","topData","isTopLoading","upcomingData","isUpcomingLoading","index","setIndex","leaving","setLeaving","toggleLeaving","onBoxClicked","movieId","clickedMovie","params","results","find","movie","totalMovies","length","maxIndex","Math","floor","backdrop_path","title","overview","AnimatePresence","onExitComplete","slice","map","poster_path","style","backgroundImage","display","alignItems","justifyContent","paddingBottom","marginTop","zIndex","position","src","alt","fontSize","vote_count","marginLeft","marginRight","vote_average","adult","useLocation","searchMovieData","isSearchMovieLoading","searchTvShowsData","isSearchTvLoading","name","goBack","Tv","popularData","isPopularLoading","topRateData","isToRateLoading","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.2cf3c869.chunk.js","sourcesContent":["import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: fixed;\n    width: 100%;\n    top: 0;\n    font-size: 14px;\n    padding: 20px 60px;\n    color: white;\n    z-index: 99999;\n`;\n\nconst Col = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n    margin-right: 50px;\n    width: 95px;\n    height: 25px;\n    fill: ${(props) => props.theme.red};\n    path {\n        stroke-width: 6px;\n        stroke: white;\n    }\n`;\n\nconst Items = styled.ul`\n    display: flex;\n    align-items: center;\n`;\n\nconst Item = styled.li`\n    margin-right: 20px;\n    color: ${(props) => props.theme.white.darker};\n    transition: color 0.3s ease-in-out;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    &:hover {\n        color: ${(props) => props.theme.white.lighter};\n    }\n`;\n\nconst Search = styled.form`\n    color: white;\n    display: flex;\n    align-items: center;\n    position: relative;\n    svg {\n        height: 25px;\n    }\n`;\n\nconst Circle = styled(motion.span)`\n    position: absolute;\n    width: 5px;\n    height: 5px;\n    border-radius: 2.5px;\n    bottom: -5px;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    background-color: ${(props) => props.theme.red};\n`;\n\nconst Input = styled(motion.input)`\n    transform-origin: right center;\n    position: absolute;\n    right: 0px;\n    padding: 5px 10px;\n    padding-left: 40px;\n    z-index: -1;\n    color: white;\n    font-size: 16px;\n    background-color: transparent;\n    border: 1px solid ${(props) => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n    normal: {\n        fillOpacity: 1,\n    },\n    active: {\n        fillOpacity: [0, 1, 0],\n        transition: {\n            repeat: Infinity,\n        },\n    },\n};\n\nconst navVariants = {\n    top: {\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n    },\n    scroll: {\n        backgroundColor: \"rgba(0, 0, 0, 1)\",\n    },\n};\n\ninterface IForm {\n    keyword: string;\n}\n\nfunction Header() {\n    const [searchOpen, setSearchOpen] = useState(false);\n    const homeMatch = useRouteMatch(\"/\");\n    const tvMatch = useRouteMatch(\"/tv\");\n    const inputAnimation = useAnimation();\n    const navAnimation = useAnimation();\n    const { scrollY } = useViewportScroll();\n    const toggleSearch = () => {\n        if (searchOpen) {\n            inputAnimation.start({\n                scaleX: 0,\n            });\n        } else {\n            inputAnimation.start({ scaleX: 1 });\n        }\n        setSearchOpen((prev) => !prev);\n    };\n    useEffect(() => {\n        scrollY.onChange(() => {\n            if (scrollY.get() > 80) {\n                navAnimation.start(\"scroll\");\n            } else {\n                navAnimation.start(\"top\");\n            }\n        });\n    }, [scrollY, navAnimation]);\n    const history = useHistory();\n    const { register, handleSubmit } = useForm<IForm>();\n    const onValid = (data: IForm) => {\n        history.push(`/search/${data.keyword}`);\n    };\n    return (\n        <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n            <Col>\n                <Link to=\"/\">\n                    <Logo variants={logoVariants} whileHover=\"active\" animate=\"normal\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1024\" height=\"276.742\" viewBox=\"0 0 1024 276.742\">\n                        <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n                    </Logo>\n                </Link>\n                <Items>\n                    <Item>\n                        <Link to=\"/\">Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}</Link>\n                    </Item>\n                    <Item>\n                        <Link to=\"/tv\">Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}</Link>\n                    </Item>\n                </Items>\n            </Col>\n            <Col>\n                <Search onSubmit={handleSubmit(onValid)}>\n                    <motion.svg\n                        onClick={toggleSearch}\n                        animate={{ x: searchOpen ? -185 : 0 }}\n                        transition={{ type: \"linear\" }}\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path fillRule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clipRule=\"evenodd\"></path>\n                    </motion.svg>\n                    <Input\n                        {...register(\"keyword\", { required: true, minLength: 2 })}\n                        animate={inputAnimation}\n                        initial={{ scaleX: 0 }}\n                        transition={{ type: \"linear\" }}\n                        placeholder=\"Search for movie or tv show...\"\n                    />\n                </Search>\n            </Col>\n        </Nav>\n    );\n}\n\nexport default Header;\n","const API_KEY = \"604d2f75779633393886327c93de99c2\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\nexport interface IMovie {\n    id: number;\n    backdrop_path: string;\n    poster_path: string;\n    title: string;\n    name: string;\n    overview: string;\n    vote_count: number;\n    vote_average: number;\n    popularity: number;\n    adult: boolean;\n}\n\nexport interface ITv {\n    id: number;\n    backdrop_path: string;\n    poster_path: string;\n    title: string;\n    name: string;\n    overview: string;\n}\n\nexport interface IGetMoviesResult {\n    dates: {\n        maximum: string;\n        minimum: string;\n    };\n    page: number;\n    results: IMovie[];\n    total_pages: number;\n    total_results: number;\n}\n\nexport interface ITvResult {\n    dates: {\n        maximum: string;\n        minimum: string;\n    };\n    page: number;\n    results: ITv[];\n    total_pages: number;\n    total_results: number;\n}\n\nexport function getMovies() {\n    return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then((response) => response.json());\n}\n\nexport function getLastMovies() {\n    return fetch(`${BASE_PATH}/movie/latest?api_key=${API_KEY}`).then((response) => response.json());\n}\n\nexport function getTopRatedMovies() {\n    return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then((response) => response.json());\n}\n\nexport function getUpcomingMovies() {\n    return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}`).then((response) => response.json());\n}\n\nexport function getTvShows() {\n    return fetch(`${BASE_PATH}/tv/on_the_air?api_key=${API_KEY}`).then((response) => response.json());\n}\n\nexport function getLastTvShows() {\n    return fetch(`${BASE_PATH}/tv/latest?api_key=${API_KEY}`).then((response) => response.json());\n}\n\nexport function getAiringTodayTvShows() {\n    return fetch(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}`).then((response) => response.json());\n}\n\nexport function getPopularShows() {\n    return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then((response) => response.json());\n}\nexport function getTopRatedTvShows() {\n    return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then((response) => response.json());\n}\n\nexport const searchMovies = async (keyword?: string) => {\n    return (await fetch(`${BASE_PATH}/search/movie?api_key=${API_KEY}&query=${keyword}`).then((response) => response.json())) || null;\n};\n\nexport const searchTvShows = async (keyword?: string) => {\n    return (await fetch(`${BASE_PATH}/search/tv?api_key=${API_KEY}&query=${keyword}`).then((response) => response.json())) || null;\n};\n","export function makeImagePath(id?: string, format?: string) {\n    return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getMovies, getLastMovies, IGetMoviesResult, IMovie, getTopRatedMovies, getUpcomingMovies } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n    background: black;\n    overflow: hidden;\n`;\n\nconst Loader = styled.div`\n    height: 20vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 60px;\n    background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${(props) => props.bgPhoto});\n    background-size: cover;\n`;\n\nconst Title = styled.h2`\n    font-size: 68px;\n    margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n    font-size: 30px;\n    width: 50%;\n`;\n\nconst Slider = styled.div`\n    position: relative;\n    top: -100px;\n    height: 300px;\n`;\n\nconst SliderTitle = styled.div`\n    font-size: 40px;\n`;\n\nconst Clear = styled.div`\n    clear: both;\n`;\n\nconst Row = styled(motion.div)`\n    display: grid;\n    gap: 5px;\n    grid-template-columns: repeat(6, 1fr);\n    position: absolute;\n    width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n    background-color: white;\n    background-image: url(${(props) => props.bgPhoto});\n    background-size: cover;\n    background-position: center center;\n    height: 200px;\n    font-size: 66px;\n    cursor: pointer;\n    &:first-child {\n        transform-origin: center left;\n    }\n    &:last-child {\n        transform-origin: center right;\n    }\n`;\n\nconst Info = styled(motion.div)`\n    padding: 10px;\n    background-color: ${(props) => props.theme.black.lighter};\n    opacity: 0;\n    position: absolute;\n    width: 100%;\n    bottom: 0;\n    h4 {\n        text-align: center;\n        font-size: 18px;\n    }\n`;\n\nconst Overlay = styled(motion.div)`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n    position: absolute;\n    width: 40vw;\n    height: 80vh;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    border-radius: 15px;\n    overflow: hidden;\n    background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n    width: 100%;\n    background-size: cover;\n    background-position: center center;\n    height: 400px;\n    position: relative;\n`;\n\nconst AdultMark = styled.span`\n    position: absolute;\n    right: 0;\n    top: 0;\n`;\n\nconst BigTitle = styled.h3`\n    color: ${(props) => props.theme.white.lighter};\n    padding: 20px;\n    font-size: 30px;\n    position: relative;\n    top: -80px;\n    width: 600px;\n`;\n\nconst BigOverview = styled.p`\n    padding: 20px;\n    position: relative;\n\n    color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n    hidden: {\n        x: window.outerWidth + 5,\n    },\n    visible: {\n        x: 0,\n    },\n    exit: {\n        x: -window.outerWidth - 5,\n    },\n};\n\nconst boxVariants = {\n    normal: {\n        scale: 1,\n    },\n    hover: {\n        scale: 1.3,\n        y: -80,\n        transition: {\n            delay: 0.5,\n            duration: 0.1,\n            type: \"tween\",\n        },\n    },\n};\n\nconst infoVariants = {\n    hover: {\n        opacity: 1,\n        transition: {\n            delay: 0.5,\n            duration: 0.1,\n            type: \"tween\",\n        },\n    },\n};\n\nconst offset = 6;\n\nfunction Home() {\n    const history = useHistory();\n    const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n    const { scrollY } = useViewportScroll();\n    const { data, isLoading } = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies);\n    const { data: lastData, isLoading: isLastLoading } = useQuery<IMovie>([\"movies\", \"last\"], getLastMovies);\n    const { data: topData, isLoading: isTopLoading } = useQuery<IGetMoviesResult>([\"movies\", \"top\"], getTopRatedMovies);\n    const { data: upcomingData, isLoading: isUpcomingLoading } = useQuery<IGetMoviesResult>([\"movies\", \"upcoming\"], getUpcomingMovies);\n    const [index, setIndex] = useState(0);\n    const [leaving, setLeaving] = useState(false);\n    const increaseIndex = () => {\n        if (data) {\n            if (leaving) return;\n            toggleLeaving();\n            const totalMovies = data.results.length - 1;\n            const maxIndex = Math.floor(totalMovies / offset) - 1;\n            setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n        }\n    };\n    const toggleLeaving = () => setLeaving((prev) => !prev);\n    const onBoxClicked = (movieId?: number) => {\n        history.push(`/movies/${movieId}`);\n    };\n    const onOverlayClick = () => history.push(\"/\");\n    const clickedMovie =\n        bigMovieMatch?.params.movieId &&\n        (data?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId) ||\n            topData?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId) ||\n            upcomingData?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId) ||\n            lastData);\n\n    return (\n        <Wrapper>\n            {isLoading && isLastLoading && isTopLoading && isUpcomingLoading ? (\n                <Loader>Loading...</Loader>\n            ) : (\n                <>\n                    <Banner onClick={increaseIndex} bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>\n                        <Title>{data?.results[0].title}</Title>\n                        <Overview>{data?.results[0].overview}</Overview>\n                    </Banner>\n\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Now Playing</SliderTitle>\n                            <Row variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                {data?.results\n                                    .slice(1)\n                                    .slice(offset * index, offset * index + offset)\n                                    .map((movie) => (\n                                        <Box\n                                            layoutId={movie.id + \"\"}\n                                            key={movie.id}\n                                            whileHover=\"hover\"\n                                            initial=\"normal\"\n                                            variants={boxVariants}\n                                            onClick={() => onBoxClicked(movie.id)}\n                                            transition={{ type: \"tween\" }}\n                                            bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                                        >\n                                            <Info variants={infoVariants}>\n                                                <h4>{movie.title}</h4>\n                                            </Info>\n                                        </Box>\n                                    ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n\n                    <Clear></Clear>\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Top Rated Movies</SliderTitle>\n                            <Row variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                {topData?.results\n                                    .slice(1)\n                                    .slice(offset * index, offset * index + offset)\n                                    .map((movie) => (\n                                        <Box\n                                            layoutId={movie.id + \"\"}\n                                            key={movie.id}\n                                            whileHover=\"hover\"\n                                            initial=\"normal\"\n                                            variants={boxVariants}\n                                            onClick={() => onBoxClicked(movie.id)}\n                                            transition={{ type: \"tween\" }}\n                                            bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                                        >\n                                            <Info variants={infoVariants}>\n                                                <h4>{movie.title}</h4>\n                                            </Info>\n                                        </Box>\n                                    ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <Clear></Clear>\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Upcoming Movies</SliderTitle>\n                            <Row variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                {upcomingData?.results\n                                    .slice(1)\n                                    .slice(offset * index, offset * index + offset)\n                                    .map((movie) => (\n                                        <Box\n                                            layoutId={movie.id + \"\"}\n                                            key={movie.id}\n                                            whileHover=\"hover\"\n                                            initial=\"normal\"\n                                            variants={boxVariants}\n                                            onClick={() => onBoxClicked(movie.id)}\n                                            transition={{ type: \"tween\" }}\n                                            bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                                        >\n                                            <Info variants={infoVariants}>\n                                                <h4>{movie.title}</h4>\n                                            </Info>\n                                        </Box>\n                                    ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <Clear></Clear>\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Latest Movie</SliderTitle>\n                            <Row initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                <Box\n                                    layoutId={lastData?.id + \"\"}\n                                    key={lastData?.id}\n                                    whileHover=\"hover\"\n                                    initial=\"normal\"\n                                    variants={boxVariants}\n                                    onClick={() => onBoxClicked(lastData?.id)}\n                                    transition={{ type: \"tween\" }}\n                                    bgPhoto={makeImagePath(lastData?.poster_path, \"w500\")}\n                                >\n                                    <Info variants={infoVariants}>\n                                        <h4>{lastData?.title}</h4>\n                                    </Info>\n                                </Box>\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <AnimatePresence>\n                        {bigMovieMatch ? (\n                            <>\n                                <Overlay onClick={onOverlayClick} exit={{ opacity: 0 }} animate={{ opacity: 1 }} />\n                                <BigMovie style={{ top: scrollY.get() + 100 }} layoutId={bigMovieMatch.params.movieId}>\n                                    {clickedMovie && (\n                                        <>\n                                            <BigCover\n                                                style={{\n                                                    backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                                                        clickedMovie.backdrop_path || clickedMovie.poster_path,\n                                                        \"w500\"\n                                                    )})`,\n                                                }}\n                                            />\n                                            <BigTitle>{clickedMovie.title}</BigTitle>\n                                            <div\n                                                style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"end\", paddingBottom: \"30px\", marginTop: \"-140px\", zIndex: 100, position: \"relative\" }}\n                                            >\n                                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                                    <img style={{ width: \"40px\", height: \"40px\" }} src=\"https://img.icons8.com/arcade/344/experimental-star-arcade.png\" alt=\"adult_true\" />\n                                                    <span style={{ fontSize: \"30px\" }}>{clickedMovie.vote_count}</span>\n                                                </div>\n                                                <div style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"20px\", marginRight: \"20px\" }}>\n                                                    <img\n                                                        style={{ width: \"40px\", height: \"40px\" }}\n                                                        src=\"https://img.icons8.com/external-prettycons-flat-prettycons/2x/external-percentage-shopping-prettycons-flat-prettycons.png\"\n                                                        alt=\"adult_true\"\n                                                    />\n                                                    <span style={{ fontSize: \"30px\" }}>{clickedMovie.vote_average}</span>\n                                                </div>\n                                            </div>\n                                            <AdultMark>\n                                                {!clickedMovie.adult ? (\n                                                    <img style={{ width: \"80px\", height: \"80px\" }} src=\"https://img.icons8.com/stickers/344/18-plus.png\" alt=\"adult_true\" />\n                                                ) : (\n                                                    <img style={{ width: \"80px\", height: \"80px\" }} src=\"https://img.icons8.com/color/344/child-safe-zone--v1.png\" alt=\"adult_false\" />\n                                                )}\n                                            </AdultMark>\n\n                                            <BigOverview>{clickedMovie.overview}</BigOverview>\n                                        </>\n                                    )}\n                                </BigMovie>\n                            </>\n                        ) : null}\n                    </AnimatePresence>\n                </>\n            )}\n        </Wrapper>\n    );\n}\nexport default Home;\n","// import { useLocation } from \"react-router\";\n\n// function Search() {\n//     const location = useLocation();\n//     const keyword = new URLSearchParams(location.search).get(\"keyword\");\n//     console.log(keyword);\n//     return <div style={{ backgroundColor: \"black\", height: \"200vh\", marginTop: \"65px\", fontSize: \"60px\" }}>검색 결과</div>;\n// }\n// export default Search;\n\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { ITvResult, getTvShows, getAiringTodayTvShows, getLastTvShows, getPopularShows, getTopRatedTvShows, ITv, IMovie, IGetMoviesResult, searchMovies, searchTvShows } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n    background: black;\n    overflow: hidden;\n    padding-top: 250px;\n`;\n\nconst Loader = styled.div`\n    height: 20vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 60px;\n    background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${(props) => props.bgPhoto});\n    background-size: cover;\n`;\n\nconst Title = styled.h2`\n    font-size: 68px;\n    margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n    font-size: 30px;\n    width: 50%;\n`;\n\nconst Slider = styled.div`\n    position: relative;\n    top: -100px;\n    height: 300px;\n`;\n\nconst SliderTitle = styled.div`\n    font-size: 40px;\n`;\n\nconst Clear = styled.div`\n    clear: both;\n`;\n\nconst Row = styled(motion.div)`\n    display: grid;\n    gap: 5px;\n    grid-template-columns: repeat(6, 1fr);\n    position: absolute;\n    width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n    background-color: white;\n    background-image: url(${(props) => props.bgPhoto});\n    background-size: cover;\n    background-position: center center;\n    height: 200px;\n    font-size: 66px;\n    cursor: pointer;\n    &:first-child {\n        transform-origin: center left;\n    }\n    &:last-child {\n        transform-origin: center right;\n    }\n`;\n\nconst Info = styled(motion.div)`\n    padding: 10px;\n    background-color: ${(props) => props.theme.black.lighter};\n    opacity: 0;\n    position: absolute;\n    width: 100%;\n    bottom: 0;\n    h4 {\n        text-align: center;\n        font-size: 18px;\n    }\n`;\n\nconst Overlay = styled(motion.div)`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n    position: absolute;\n    width: 40vw;\n    height: 80vh;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    border-radius: 15px;\n    overflow: hidden;\n    background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n    width: 100%;\n    background-size: cover;\n    background-position: center center;\n    height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n    color: ${(props) => props.theme.white.lighter};\n    padding: 20px;\n    font-size: 46px;\n    position: relative;\n    top: -80px;\n`;\n\nconst BigOverview = styled.p`\n    padding: 20px;\n    position: relative;\n    top: -80px;\n    color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n    hidden: {\n        x: window.outerWidth + 5,\n    },\n    visible: {\n        x: 0,\n    },\n    exit: {\n        x: -window.outerWidth - 5,\n    },\n};\n\nconst boxVariants = {\n    normal: {\n        scale: 1,\n    },\n    hover: {\n        scale: 1.3,\n        y: -80,\n        transition: {\n            delay: 0.5,\n            duration: 0.1,\n            type: \"tween\",\n        },\n    },\n};\n\nconst infoVariants = {\n    hover: {\n        opacity: 1,\n        transition: {\n            delay: 0.5,\n            duration: 0.1,\n            type: \"tween\",\n        },\n    },\n};\n\nconst offset = 6;\n\nfunction Search() {\n    const location = useLocation();\n    // const keyword = new URLSearchParams(location.search).get(\"keyword\") || \"\";\n    // console.log(keyword);\n    const history = useHistory();\n    const keyword = useRouteMatch<{ keyword: string }>(\"/search/:keyword\");\n    const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/search/:keyword/:movieId\");\n    const { scrollY } = useViewportScroll();\n    const { data: searchMovieData, isLoading: isSearchMovieLoading } = useQuery<IGetMoviesResult>([\"movie\", keyword], () => searchMovies(keyword?.params.keyword));\n    const { data: searchTvShowsData, isLoading: isSearchTvLoading } = useQuery<ITvResult>([\"tv\", keyword], () => searchTvShows(keyword?.params.keyword));\n    const [index, setIndex] = useState(0);\n    const [leaving, setLeaving] = useState(false);\n    const increaseIndex = () => {\n        if (searchMovieData) {\n            if (leaving) return;\n            toggleLeaving();\n            const totalMovies = searchMovieData.results.length - 1;\n            const maxIndex = Math.floor(totalMovies / offset) - 1;\n            setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n        }\n\n        if (searchTvShowsData) {\n            if (leaving) return;\n            toggleLeaving();\n            const totalMovies = searchTvShowsData.results.length - 1;\n            const maxIndex = Math.floor(totalMovies / offset) - 1;\n            setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n        }\n    };\n    const toggleLeaving = () => setLeaving((prev) => !prev);\n    const onBoxClicked = (keyword?: string, movieId?: number) => {\n        history.push(`/search/${keyword}/${movieId}`);\n    };\n    const onOverlayClick = () => history.goBack();\n\n    const clickedMovie =\n        bigMovieMatch?.params.movieId &&\n        ((searchMovieData?.results && searchMovieData?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId)) ||\n            (searchTvShowsData?.results && searchTvShowsData?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId)));\n\n    return (\n        <Wrapper>\n            {isSearchMovieLoading && isSearchTvLoading ? (\n                <Loader>Loading...</Loader>\n            ) : (\n                <>\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Search Result Movies</SliderTitle>\n                            <Row variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                {searchMovieData?.results &&\n                                    searchMovieData?.results\n                                        .slice(1)\n                                        .slice(offset * index, offset * index + offset)\n                                        .map((movie) => (\n                                            <Box\n                                                layoutId={movie.id + \"1\"}\n                                                key={movie.id + \"6\"}\n                                                whileHover=\"hover\"\n                                                initial=\"normal\"\n                                                variants={boxVariants}\n                                                onClick={() => onBoxClicked(keyword?.params.keyword, movie.id)}\n                                                transition={{ type: \"tween\" }}\n                                                bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                                            >\n                                                <Info variants={infoVariants}>\n                                                    <h4>{movie.title}</h4>\n                                                </Info>\n                                            </Box>\n                                        ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Search Result TvShows</SliderTitle>\n                            <Row variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                {searchTvShowsData?.results &&\n                                    searchTvShowsData?.results\n                                        .slice(1)\n                                        .slice(offset * index, offset * index + offset)\n                                        .map((movie) => (\n                                            <Box\n                                                layoutId={movie.id + \"9\"}\n                                                key={movie.id + \"4\"}\n                                                whileHover=\"hover\"\n                                                initial=\"normal\"\n                                                variants={boxVariants}\n                                                onClick={() => onBoxClicked(keyword?.params.keyword, movie.id)}\n                                                transition={{ type: \"tween\" }}\n                                                bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                                            >\n                                                <Info variants={infoVariants}>\n                                                    <h4>{movie.name}</h4>\n                                                </Info>\n                                            </Box>\n                                        ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <AnimatePresence>\n                        {bigMovieMatch ? (\n                            <>\n                                <Overlay onClick={onOverlayClick} exit={{ opacity: 0 }} animate={{ opacity: 1 }} />\n                                <BigMovie style={{ top: scrollY.get() + 100 }} layoutId={bigMovieMatch.params.movieId}>\n                                    {clickedMovie && (\n                                        <>\n                                            <BigCover\n                                                style={{\n                                                    backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                                                        clickedMovie.backdrop_path || clickedMovie.poster_path,\n                                                        \"w500\"\n                                                    )})`,\n                                                }}\n                                            />\n                                            <BigTitle>{clickedMovie.title || clickedMovie.name} </BigTitle>\n                                            <BigOverview>{clickedMovie.overview}</BigOverview>\n                                        </>\n                                    )}\n                                </BigMovie>\n                            </>\n                        ) : null}\n                    </AnimatePresence>\n                </>\n            )}\n        </Wrapper>\n    );\n}\nexport default Search;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { ITvResult, getTvShows, getAiringTodayTvShows, getLastTvShows, getPopularShows, getTopRatedTvShows, ITv } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n    background: black;\n    overflow: hidden;\n    padding-top: 250px;\n`;\n\nconst Loader = styled.div`\n    height: 20vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 60px;\n    background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${(props) => props.bgPhoto});\n    background-size: cover;\n`;\n\nconst Title = styled.h2`\n    font-size: 68px;\n    margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n    font-size: 30px;\n    width: 50%;\n`;\n\nconst Slider = styled.div`\n    position: relative;\n    top: -100px;\n    height: 300px;\n`;\n\nconst SliderTitle = styled.div`\n    font-size: 40px;\n`;\n\nconst Clear = styled.div`\n    clear: both;\n`;\n\nconst Row = styled(motion.div)`\n    display: grid;\n    gap: 5px;\n    grid-template-columns: repeat(6, 1fr);\n    position: absolute;\n    width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n    background-color: white;\n    background-image: url(${(props) => props.bgPhoto});\n    background-size: cover;\n    background-position: center center;\n    height: 200px;\n    font-size: 66px;\n    cursor: pointer;\n    &:first-child {\n        transform-origin: center left;\n    }\n    &:last-child {\n        transform-origin: center right;\n    }\n`;\n\nconst Info = styled(motion.div)`\n    padding: 10px;\n    background-color: ${(props) => props.theme.black.lighter};\n    opacity: 0;\n    position: absolute;\n    width: 100%;\n    bottom: 0;\n    h4 {\n        text-align: center;\n        font-size: 18px;\n    }\n`;\n\nconst Overlay = styled(motion.div)`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n    position: absolute;\n    width: 40vw;\n    height: 80vh;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    border-radius: 15px;\n    overflow: hidden;\n    background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n    width: 100%;\n    background-size: cover;\n    background-position: center center;\n    height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n    color: ${(props) => props.theme.white.lighter};\n    padding: 20px;\n    font-size: 46px;\n    position: relative;\n    top: -80px;\n`;\n\nconst BigOverview = styled.p`\n    padding: 20px;\n    position: relative;\n    top: -80px;\n    color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n    hidden: {\n        x: window.outerWidth + 5,\n    },\n    visible: {\n        x: 0,\n    },\n    exit: {\n        x: -window.outerWidth - 5,\n    },\n};\n\nconst boxVariants = {\n    normal: {\n        scale: 1,\n    },\n    hover: {\n        scale: 1.3,\n        y: -80,\n        transition: {\n            delay: 0.5,\n            duration: 0.1,\n            type: \"tween\",\n        },\n    },\n};\n\nconst infoVariants = {\n    hover: {\n        opacity: 1,\n        transition: {\n            delay: 0.5,\n            duration: 0.1,\n            type: \"tween\",\n        },\n    },\n};\n\nconst offset = 6;\n\nfunction Tv() {\n    const history = useHistory();\n    const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/tv/:movieId\");\n    const { scrollY } = useViewportScroll();\n    const { data, isLoading } = useQuery<ITvResult>([\"tv\", \"onair\"], getTvShows);\n    const { data: lastData, isLoading: isLastLoading } = useQuery<ITv>([\"tv\", \"last\"], getLastTvShows);\n    const { data: topData, isLoading: isTopLoading } = useQuery<ITvResult>([\"tv\", \"airingToday\"], getAiringTodayTvShows);\n    const { data: popularData, isLoading: isPopularLoading } = useQuery<ITvResult>([\"tv\", \"popular\"], getPopularShows);\n    const { data: topRateData, isLoading: isToRateLoading } = useQuery<ITvResult>([\"tv\", \"topRate\"], getTopRatedTvShows);\n    const [index, setIndex] = useState(0);\n    const [leaving, setLeaving] = useState(false);\n    const increaseIndex = () => {\n        if (data) {\n            if (leaving) return;\n            toggleLeaving();\n            const totalMovies = data.results.length - 1;\n            const maxIndex = Math.floor(totalMovies / offset) - 1;\n            setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n        }\n    };\n    const toggleLeaving = () => setLeaving((prev) => !prev);\n    const onBoxClicked = (movieId?: number) => {\n        history.push(`/tv/${movieId}`);\n    };\n    const onOverlayClick = () => history.push(\"/tv\");\n    const clickedMovie =\n        bigMovieMatch?.params.movieId &&\n        (data?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId) ? data?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId) : lastData);\n    return (\n        <Wrapper>\n            {isLoading && isLastLoading && isTopLoading && isPopularLoading && isToRateLoading ? (\n                <Loader>Loading...</Loader>\n            ) : (\n                <>\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Now Playing</SliderTitle>\n                            <Row variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                {data?.results\n                                    .slice(1)\n                                    .slice(offset * index, offset * index + offset)\n                                    .map((movie) => (\n                                        <Box\n                                            layoutId={movie.id + \"1\"}\n                                            key={movie.id}\n                                            whileHover=\"hover\"\n                                            initial=\"normal\"\n                                            variants={boxVariants}\n                                            onClick={() => onBoxClicked(movie.id)}\n                                            transition={{ type: \"tween\" }}\n                                            bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                                        >\n                                            <Info variants={infoVariants}>\n                                                <h4>{movie.name}</h4>\n                                            </Info>\n                                        </Box>\n                                    ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <Clear></Clear>\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Latest Movie</SliderTitle>\n                            <Row initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                <Box\n                                    layoutId={lastData?.id + \"2\"}\n                                    key={lastData?.id}\n                                    whileHover=\"hover\"\n                                    initial=\"normal\"\n                                    variants={boxVariants}\n                                    onClick={() => onBoxClicked(lastData?.id)}\n                                    transition={{ type: \"tween\" }}\n                                    bgPhoto={makeImagePath(lastData?.poster_path, \"w500\")}\n                                >\n                                    <Info variants={infoVariants}>\n                                        <h4>{lastData?.name}</h4>\n                                    </Info>\n                                </Box>\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <Clear></Clear>\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Top Rated Movies</SliderTitle>\n                            <Row variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                {topData?.results\n                                    .slice(1)\n                                    .slice(offset * index, offset * index + offset)\n                                    .map((movie) => (\n                                        <Box\n                                            layoutId={movie.id + \"3\"}\n                                            key={movie.id}\n                                            whileHover=\"hover\"\n                                            initial=\"normal\"\n                                            variants={boxVariants}\n                                            onClick={() => onBoxClicked(movie.id)}\n                                            transition={{ type: \"tween\" }}\n                                            bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                                        >\n                                            <Info variants={infoVariants}>\n                                                <h4>{movie.name}</h4>\n                                            </Info>\n                                        </Box>\n                                    ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <Clear></Clear>\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Upcoming Movies</SliderTitle>\n                            <Row variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                {popularData?.results\n                                    .slice(1)\n                                    .slice(offset * index, offset * index + offset)\n                                    .map((movie) => (\n                                        <Box\n                                            layoutId={movie.id + \"4\"}\n                                            key={movie.id}\n                                            whileHover=\"hover\"\n                                            initial=\"normal\"\n                                            variants={boxVariants}\n                                            onClick={() => onBoxClicked(movie.id)}\n                                            transition={{ type: \"tween\" }}\n                                            bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                                        >\n                                            <Info variants={infoVariants}>\n                                                <h4>{movie.name}</h4>\n                                            </Info>\n                                        </Box>\n                                    ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <Clear></Clear>\n                    <Slider>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <SliderTitle>Top Rated Movies</SliderTitle>\n                            <Row variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                                {topRateData?.results\n                                    .slice(1)\n                                    .slice(offset * index, offset * index + offset)\n                                    .map((movie) => (\n                                        <Box\n                                            layoutId={movie.id + \"5\"}\n                                            key={movie.id}\n                                            whileHover=\"hover\"\n                                            initial=\"normal\"\n                                            variants={boxVariants}\n                                            onClick={() => onBoxClicked(movie.id)}\n                                            transition={{ type: \"tween\" }}\n                                            bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                                        >\n                                            <Info variants={infoVariants}>\n                                                <h4>{movie.name}</h4>\n                                            </Info>\n                                        </Box>\n                                    ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <AnimatePresence>\n                        {bigMovieMatch ? (\n                            <>\n                                <Overlay onClick={onOverlayClick} exit={{ opacity: 0 }} animate={{ opacity: 1 }} />\n                                <BigMovie style={{ top: scrollY.get() + 100 }} layoutId={bigMovieMatch.params.movieId}>\n                                    {clickedMovie && (\n                                        <>\n                                            <BigCover\n                                                style={{\n                                                    backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                                                        clickedMovie.backdrop_path || clickedMovie.poster_path,\n                                                        \"w500\"\n                                                    )})`,\n                                                }}\n                                            />\n                                            <BigTitle>{clickedMovie.name}</BigTitle>\n                                            <BigOverview>{clickedMovie.overview}</BigOverview>\n                                        </>\n                                    )}\n                                </BigMovie>\n                            </>\n                        ) : null}\n                    </AnimatePresence>\n                </>\n            )}\n        </Wrapper>\n    );\n}\nexport default Tv;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tv\";\n\nfunction App() {\n    return (\n        <Router>\n            <Header />\n            <Switch>\n                <Route path=\"/tv\">\n                    <Tv />\n                </Route>\n                <Route path={[\"/search\", \"/search/:movieId\"]}>\n                    <Search />\n                </Route>\n                <Route path={[\"/\", \"/movies/:movieId\"]}>\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2F2F2F\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}